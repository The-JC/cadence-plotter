import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import pandas as pd
import numpy as np
import os

from plot_utils import *

name_base = "V5f"
name_suffix = "(Design_Point=1)"

y_min = -100
y_max = 20
x_min = 1
x_max = 100

xlim=(x_min, x_max)

xscale = 10**-9#
xscale_suffix = 'G'

file_name = "./data/Interactive.544_V5f.csv"

#Use to manually load latex path on IAS machines if not loaded earlier 
os.environ["PATH"] += os.pathsep + "/software/texlive/2023/bin/x86_64-linux"

def plotWithSFDR(ax, x, y):
    #plot on axis (column names are generated by pandas)

    peakind = find_peaks(x, height=-30)[0]
    pksf=x[peakind]
    pksY=y[peakind]
    isorted = np.argsort(pksY)
    sfdrval = pksY[isorted[-1]] - pksY[isorted[-2]]

    pkfa = pksf[isorted[-1]]*xscale
    pkYa = pksY[isorted[-1]]
    pkfb = pksf[isorted[-2]]*xscale
    pkYb = pksY[isorted[-2]]
    # ax.fill_between((0,100),(pkYb,pkYb),(pkYa,pkYa), label = 'SFDR',
    #                      color = "lightblue") 

    ax.plot([pkfa, x_max], [pkYa, pkYa], c='black')
    ax.plot([pkfb, x_max], [pkYb, pkYb], c='black')
    ax.annotate('', xy=((pkfb*2+x_max)/3, pkYa), xycoords='data',
                xytext=((pkfb*2+x_max)/3, pkYb), textcoords='data',
                arrowprops=dict(arrowstyle="<->",
                                connectionstyle=patches.ConnectionStyle.Bar(armA=0.0, armB=0.0, fraction=0.0, angle=None),
                                #ec="k",
                                shrinkA=1, shrinkB=1)) 
    ax.annotate("SFDR %ddB" % (pkYa-pkYb), ((pkfb*2+x_max)/3+1, (pkYa+pkYb)/2), va='center', ha='left')

    ax.scatter(
        pksf*xscale,
        pksY,
        marker='x',
        c='r')



# ax.xaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{:,.2f}'.format(x*10**9) + 'n'))

if __name__ == "__main__":
    #Activate style
    plt.style.use("./styles/BA.mplstyle")

    #Import using pandas
    df = pd.read_csv(file_name)

    #Create axis (default is 1x1)
    fig, ax = plt.subplots(1, 1)

    # x = getData(df,name_base, strF)
    plotDF(ax, getData(df, name_base, name_suffix, 'X'), getData(df, name_base, name_suffix, 'Y'), "%s" % ("25"), xscale)

    # minSFDR(ax, df, name_base, [name_suffix], xlim, xscale)

    #Set axis labels
    ax.set_xlabel(r"Frequency [\si{%s\hertz}]" % (xscale_suffix))
    ax.set_ylabel(r"OUT [\si{\decibel}]")

    ax.set_ylim(y_min, y_max)
    ax.set_xlim(x_min, x_max)



    #Show legend
    # plt.legend(loc='upper center', ncol=3, bbox_to_anchor=(0.5, 1.15))

    plt.savefig(r"./plots/frequency_%s.pdf" % (name_base))
    plt.show()
