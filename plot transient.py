import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import pandas as pd
import numpy as np
import os
from plot_utils import intersection


def plot_transient(in_file, out_file, input_names, y_axis_name, x_lim, y_lim=None ,xscale=1, xscale_suffix='',window_positon=100, tol=5e-2):
    df = pd.read_csv(f"./data/{in_file}")

    fig, ax = plt.subplots()
    
    xmin = min(df["OUTp (Design_Point=1) X"].values)


    #plot on axis (column names are generated by pandas)
    ax.plot((df[f"{input_names[0]} X"].values-xmin)*xscale ,df[f"{input_names[0]} Y"].values, label="OUTp")
    ax.plot((df[f"{input_names[1]} X"].values-xmin)*xscale ,df[f"{input_names[1]} Y"].values, label="OUTn")

    # ax.xaxis.set_major_formatter(ticker.FuncFormatter(lambda x, pos: '{:,.2f}'.format(x*10**9) + 'n'))

    #Set axis labels
    ax.set_xlabel(r"Time [\si{%s\second}]" % (xscale_suffix))
    ax.set_ylabel(y_axis_name)

    ax.set_xlim(x_lim[0], x_lim[1])
    if y_lim is not None:
        ax.set_ylim(y_lim[0], y_lim[1])

    ind_cross = intersection(
        df[f"{input_names[0]} Y"].values, 
        df[f"{input_names[1]} Y"].values,
        tol)

    x = (df[f"{input_names[0]} X"].values-xmin)*xscale

    cross_x1 = x[ind_cross[0]]
    cross_x2 = x[ind_cross[1]]

    ax.axvline(cross_x1, linestyle='dashed', color='#CC071E')
    ax.axvline(cross_x2, linestyle='dashed', color='#CC071E')

    ax.text(cross_x1, 0.87, "$t_1$")
    ax.text(cross_x2, 0.87, "$t_2$")

    ax.axhline(0.4, color='#0098A1', linestyle='-.')

    #Show legend
    # plt.legend(loc='upper center', ncol=2, bbox_to_anchor=(0.5, 1.15))
    plt.legend(loc='upper right')

    plt.savefig(f"./plots/{out_file}")

if __name__ == '__main__':
    #Use to manually load latex path on IAS machines if not loaded earlier 
    os.environ["PATH"] += os.pathsep + "/software/texlive/2023/bin/x86_64-linux"

    #Import using pandas
    # df = pd.read_csv("./data/final/Interactive.548_OUT_tran.csv")


    #Activate style
    plt.style.use("./styles/presentation.mplstyle")

    file_type = 'svg'

    x_lim= (0, 120)
    y_lim=(-0.05, 0.85)

    plot_transient(
        in_file= 'Interactive.375_OUT.csv',
        out_file= f'transient375_unfiltered.{file_type}',
        input_names= ('OUTp (Design_Point=1)', 'OUTn (Design_Point=1)'),
        y_axis_name=r"OUT(unfiltered) [\si{\volt}]",
        x_lim= x_lim,
        y_lim=y_lim,
        xscale = 10**12,
        xscale_suffix = 'p'
    )

    plot_transient(
        in_file= 'final/Interactive.564_OUT_tran.csv',
        out_file= f'transient564_filtered.{file_type}',
        input_names= ('OUTp (Design_Point=1)', 'OUTn (Design_Point=1)'),
        y_axis_name=r"OUT [\si{\volt}]",
        x_lim= x_lim,
        y_lim=y_lim,
        xscale = 10**12,
        xscale_suffix = 'p',
        tol=1e-2
    )

    #Create axis (default is 1x1)
    plt.show()
